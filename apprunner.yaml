AWSTemplateFormatVersion: 2010-09-09
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Set your application configurations.
        Parameters:
          - ApplicationName
          - ECRRepositoryName
Parameters:
  ApplicationName:
    Description: "Your application name"
    Type: String
    Default: "my-flask-app"
  ECRRepositoryName:
    Description: "Your ECR Repository name"
    Type: String
    Default: "my-flask-app"
Resources:
  # SSM Parameter Store for RDS for PostgreSQL
  RDSPostgreSQLParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub: "/${ApplicationName}/RDSPostgreSQL"
      DataType: text
      Type: String
      Value: "TODO:UPDATE postgresql://postgres:password@localhost:5432/postgres"
  # IAM Role for App Runner Service : ECR
  AppRunnerServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: "AppRunnerECRAccessRole-${ApplicationName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "build.apprunner.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/service-role/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess"
  # IAM Role for App Runner Tasks : X-Ray, DynamoDB, SSM Parameter Store
  AppRunnerTaskPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: "${ApplicationName}-task-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "DynamoDB"
            Effect: Allow
            Action:
              - "dynamodb:BatchGetItem"
              - "dynamodb:GetShardIterator"
              - "dynamodb:GetItem"
              - "dynamodb:Scan"
              - "dynamodb:Query"
              - "dynamodb:GetRecords"
            Resource:
              Fn::Sub: "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Employee"
          - Sid: "SSMParameter"
            Effect: Allow
            Action:
              - "ssm:GetParameters"
            Resource:
              Fn::Sub: "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ApplicationName}/*"
  AppRunnerTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: "${ApplicationName}-task-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "tasks.apprunner.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess"
        - Ref: AppRunnerTaskPolicy
  # App Runner Service
  AppRunner:
    Type: AWS::AppRunner::Service
    Properties:
      ServiceName:
        Fn::Sub: "${ApplicationName}"
      SourceConfiguration:
        AuthenticationConfiguration:
          AccessRoleArn:
            Fn::GetAtt: [AppRunnerServiceRole, Arn]
        AutoDeploymentsEnabled: false
        ImageRepository:
          ImageIdentifier:
            Fn::Sub: "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepositoryName}:latest"
          ImageRepositoryType: ECR
          ImageConfiguration:
            Port: 5000
            RuntimeEnvironmentSecrets:
              - Name: "POSTGRES_URL"
                Value:
                  Fn::Sub: "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ApplicationName}/RDSPostgreSQL"
      InstanceConfiguration:
        Cpu: "0.25 vCPU"
        Memory: "0.5 GB"
        InstanceRoleArn:
          Fn::GetAtt: [AppRunnerTaskRole, Arn]
